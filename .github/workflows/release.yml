# Workflow for building and deploying a Jekyll site to GitHub Pages
name: Build and Release Package

on:
  push:
      # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release Version'
        required: true
        default : "v1.0.0"
        type: string
      prerelease:
        description: 'Is Pre-Release'
        required: true
        default : false
        type: boolean

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # - name: Use Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18.15.0
     
      # - run: npm install
      
      # - run: npm audit fix --force
      #   continue-on-error: true
            
      # - run: npm run package
      
      # - run: npm run make      
          
      # - name: Upload a Build Artifact
      #   uses: actions/upload-artifact@v3.1.2
      #   with:
      #     name: Release ${{ github.event.inputs.tag }}
      #     path: out/make/*


  release:
    name: Release
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: Release ${{ github.event.inputs.tag }}
          path: dist

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.event.inputs.tag }}
      #     release_name: Release ${{ github.event.inputs.tag }}
      #     prerelease: ${{ github.event.inputs.prerelease }}

      - run:  |
          ls
          cd dist/
          ls 
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: dist/zip/win32/x64/datawave-win32-x64-${{ github.event.inputs.tag }}.zip
            asset_name: datawave-zip-${{ github.event.inputs.tag }}.zip
            asset_content_type: application/zip
            
      - run: tar.exe -a -c -f datawave-squirrel-${{ github.event.inputs.tag }}x64.zip dist/squirrel.windows/x64

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: dist/squirrel.windows/x64/datawave-squirrel-${{ github.event.inputs.tag }}x64.zip
            asset_name: datawave-squirrel-${{ github.event.inputs.tag }}x64.zip
            asset_content_type: application/zip
    
