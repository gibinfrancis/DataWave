# Workflow for building and deploying a Jekyll site to GitHub Pages
name: Release build

on:
  push:
      # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release Version'
        required: true
        default : "v1.0.0"
        type: string
      prerelease:
        description: 'Is Pre-Release'
        required: true
        default : false
        type: boolean

jobs:
  release:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.15.0
     
      - run: npm install
      - run: npm audit fix --force
      - run: npm package
      - run: npm make

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: Release ${{ github.event.inputs.tag }}
          prerelease: ${{ github.event.inputs.prerelease }}
      
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
            asset_path: ./out/make/zip/win32/x64/datawave-win32-x64-${{ github.event.inputs.tag }}.zip
            asset_name: datawave-${{ github.event.inputs.tag }}.zip
            asset_content_type: application/zip